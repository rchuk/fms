openapi: 3.0.1
info:
  title: FMS
  version: v1
servers:
  - url: http://localhost:3333
paths:
  /api/auth/register:
    post:
      tags:
        - Auth
      summary: Attempts to register new user using credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
      responses:
        '200':
          description: Returns access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicClientError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicError'
  /api/auth/login:
    post:
      tags:
        - Auth
      summary: Attempts to login using user credentials
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - Email
                - Password
              type: object
              properties:
                Email:
                  type: string
                  example: meowmeow@gmail.com
                Password:
                  type: string
                  example: password1
            encoding:
              Email:
                style: form
              Password:
                style: form
      responses:
        '200':
          description: Returns access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicClientError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicError'
  /api/auth/me:
    get:
      tags:
        - Auth
      summary: Get id of the current user
      responses:
        '200':
          description: Returns id of the current user
          content:
            application/json:
              schema:
                type: integer
                format: int32
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicClientError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicError'
components:
  schemas:
    AccessTokenResponse:
      required:
        - access_token
        - expires_in
        - token_type
      type: object
      properties:
        access_token:
          minLength: 1
          type: string
          example: abcdefg123
        token_type:
          minLength: 1
          type: string
          example: Bearer
        expires_in:
          type: integer
          format: int32
          example: 3600
      additionalProperties: false
    PublicClientError:
      required:
        - description
      type: object
      properties:
        description:
          minLength: 1
          type: string
          example: Something bad happened
        validationErrors:
          type: array
          items:
            type: string
          nullable: true
          example:
            - Email can't contain less than 3 characters
            - Password can't be empty
      additionalProperties: false
    PublicError:
      required:
        - description
      type: object
      properties:
        description:
          minLength: 1
          type: string
          example: Something bad happened
      additionalProperties: false
    UserRegisterRequest:
      required:
        - email
        - password
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 3
          type: string
          example: meowmeow@gmail.com
        password:
          maxLength: 255
          minLength: 8
          type: string
          example: password1
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: "JWT Authorization header using the Bearer scheme.\n\nEnter 'Bearer' [space] and then your token in the text input below.\nExample: 'Bearer 12345abcdef'"
      name: Authorization
      in: header
security:
  - Bearer: [ ]